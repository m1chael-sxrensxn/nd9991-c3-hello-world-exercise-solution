version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.3

commands:

  destroy_environment:
    steps:
      - run:
          name: Destroy Environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

# Define the jobs we want to run for this project
jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
              --region us-east-1
      #- destroy_environment

  create_stack_inventory:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: Install tar utility
          command: yum install -y tar
      - run:
          name: create inventory file
          command: |
            echo "[all]" > ~/inventory.txt && \
            aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --filters "Name=tag:Project,Values=ND9991" \
              --output text >> ~/inventory.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - inventory.txt

  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - attach_workspace:
          at: ~/
      - checkout
      - add_ssh_keys:
          fingerprints: ["94:73:c0:34:7d:22:1d:89:cd:61:4f:ab:79:e1:40:2b"]
      - run:
          name: Install Ansible
          command: apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: ansible-playbook -i ~/inventory.txt main-remote.yml

  smoke_test:
    docker:
      - image: amazon/aws-cli
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Install curl
          command: yum install -y curl
      - run:
          name: smoke test
          command: |
            export IP=$(tail -n 1 ~/inventory.txt)
            export response=$(curl $IP:3000)
            if [ "$response" != 'Hello world!' ]; then
              return 1
            fi
      - destroy_environment

# Sequential workflow
workflows:
  # Name the workflow
  deploy_and_intengration_test:
    jobs:
      - create_infrastructure
      - create_stack_inventory:
          requires:
            - create_infrastructure
      - configure_infrastructure:
          requires:
            - create_stack_inventory
      - smoke_test:
          requires:
            - configure_infrastructure
